// Global default params, used in configs
params {
    // Workflow flags
    outdir = './results'

    // Boilerplate options
    help = false
    tracedir = "${params.outdir}/pipeline_info"

    // cache option makes it a bit easier to set conda or singularity cacheDir
    cache = ''

    // varCaller
    varCaller = 'iVar'
    viridian = false
    analysis = false

    // krakenDB
    krakdb = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/databases/kraken2/minikraken2_v2_8GB_201904_UPDATE'

    // GFF
    GFF = false

    // primers
    primers = 'https://raw.githubusercontent.com/iqbal-lab-org/viridian_workflow/master/data/covid-artic-v3.json'
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

if (params.varCaller == 'medaka') {
    params.medaka = true
}
else if (params.varCaller == 'viridian') {
    params.viridian = true
}

if ( params.medaka || params.nanopolish || params.viridian ) {
    includeConfig 'conf/nanopore.config'
}

if ( params.illumina ) {
    includeConfig 'conf/illumina.config'
    if (params.varCaller == 'iVar') {
        params.viridian = false
    }
}

executor {
    queueSize = 100000
}

profiles {
    sp3 {
        process {
            scratch = true
            errorStrategy = 'ignore'
        }
        report {
            enabled = true
        }

        timeline {
            enabled = true
        }
        dag {
            enabled = true
        }
        trace {
            enabled = true
        }
    }
    conda {
        if ( params.medaka || params.nanopolish ) {
            process.conda = "$baseDir/environments/nanopore/environment.yml"
     } else if (params.illumina) {
            process.conda = "$baseDir/environments/illumina/environment.yml"
        }
        if (params.cache) {
            conda.cacheDir = params.cache
        }
        includeConfig 'conf/conda.config'
    }
    docker {
        docker.enabled = true
        fixOwnership = true
        runOptions = "-u \$(id -u):\$(id -g)"
    }
    singularity {
        process {
            scratch = false
            errorStrategy = 'ignore'
        }
        report {
            enabled = true
        }

        timeline {
            enabled = true
        }
        dag {
            enabled = true
        }
        trace {
            enabled = true
        }
        //singularity.enabled = true
        singularity.autoMounts = true

        if ( params.medaka || params.nanopolish || params.analysis || (params.viridian && !params.illumina) ) {
            process {
                withName:articDownloadScheme {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-nanopore_v1.7.4.sif'
                }
                withName:articGuppyPlex {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-nanopore_v1.7.4.sif'
                }
                withName:articMinIONMedaka {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-nanopore_v1.7.4.sif'
                }
                withName:articRemoveUnmappedReads {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-nanopore_v1.7.4.sif'
                }
                withName:makeQCCSV {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-nanopore_v1.7.4.sif'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-nanopore_v1.7.4.sif'
                }
                withName:getObjFilesONT {
                    time = '30m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/oci_pipeline_v0.1.5.sif'
                }
                withName:pango {
                    time = '5m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/pango_v0.1.5.sif'
                }
                withName:nextclade {
                    time = '5m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/nextclade_v0.1.5.sif'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/nextclade_v0.1.5.sif'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/aln2type_v0.1.5.sif'
                }
                withName:aln2type {
                    time = '5m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/aln2type_v0.1.5.sif'
                }
                withName:articMinIONViridian {
                    time = '45m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/viridian_workflow_v0.2.2.img'
                }
                withName:FN4_upload {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/fn4_upload_v0.1.5.sif'
                }
                withName:makeReport {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:getGFF3 {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/bcftools_v0.1.5.sif'
                }
                withName:bcftools_csq {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/bcftools_v0.1.5.sif'
                }
            }
    } else if (params.illumina) {
            process {
                withName:articDownloadScheme {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:indexReference {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:readTrimming {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:readMapping {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:trimPrimerSequences {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:callVariants {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:makeConsensus {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:makeQCCSV {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:collateSamples {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:getObjFiles {
                    time = '30m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/oci_pipeline_v0.1.5.sif'
                }
                withName:pango {
                    time = '5m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/pango_v0.1.5.sif'
                }
                withName:nextclade {
                    time = '5m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/nextclade_v0.1.5.sif'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/nextclade_v0.1.5.sif'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/aln2type_v0.1.5.sif'
                }
                withName:aln2type {
                    time = '5m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/aln2type_v0.1.5.sif'
                }
                withName:viridian {
                    time = '45m'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/viridian_workflow_v0.2.2.img'
                }
                withName:FN4_upload {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/fn4_upload_v0.1.5.sif'
                }
                withName:makeReport {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/artic-ncov2019-illumina_v1.7.4.sif'
                }
                withName:getGFF3 {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/bcftools_v0.1.5.sif'
                }
                withName:bcftools_csq {
                    time = '1h'
                    singularity.enabled = true
                    container = '/mnt/microbio/HOMES/jez/ncov2019-artic-nf/images/bcftools_v0.1.5.sif'
                }
            }
        }
        if (params.cache) {
            singularity.cacheDir = params.cache
        }
    }
    oke_private {
        process {
            executor = 'k8s'
            scratch = true
            errorStrategy = { sleep(Math.pow(2, task.attempt) * 200 as long); return 'retry' }
            maxRetries = 5
        }
        k8s {
            namespace = 'ns1'
            storageClaimName = 'ns1-oke-fss-pvc-nextflow-workspace'
            serviceAccount = 'ns1-nextflow-sa'
            pod = [
               [label: 'pod-type', value: 'nextflow-worker'],
               [imagePullSecret: 'sp3dockersecret2']
            ]
        }
        report {
            enabled = true
        }

        timeline {
            enabled = true
        }
        dag {
            enabled = true
        }
        trace {
            enabled = true
        }
        docker.registry = 'lhr.ocir.io/lrbvkel2wjot'

        if ( params.medaka || params.nanopolish || params.analysis || (params.viridian && !params.illumina) ) {
            process {
                container = 'oxfordmmm/nf-head-pod:latest'

                withName:articDownloadScheme {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:articGuppyPlex {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:articMinIONMedaka {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:articRemoveUnmappedReads {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:makeQCCSV {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:getObjFilesONT {
                    time = '30m'
                    container = 'oxfordmmm/oci_pipeline:latest'
                }
                withName:pango {
                    time = '5m'
                    container = 'oxfordmmm/pango:latest'
                }
                withName:nextclade {
                    time = '5m'
                    container = 'nextstrain/nextclade:1.4.0'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    container = 'nextstrain/nextclade:1.4.0'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    container = 'oxfordmmm/aln2type:latest'
                }
                withName:aln2type {
                    time = '5m'
                    container = 'oxfordmmm/aln2type:latest'
                }
                withName:articMinIONViridian {
                    time = '45m'
                    container = 'oxfordmmm/viridian_workflow:latest'
                }
                withName:FN4_upload {
                    time = '1h'
                    container = 'oxfordmmm/fn4_upload:latest'
                }
                withName:makeReport {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:getGFF3 {
                    time = '1h'
                    container = 'oxfordmmm/bcftools:latest'
                }
                withName:bcftools_csq {
                    time = '1h'
                    container = 'oxfordmmm/bcftools:latest'
                }
                withName:getWorkflowCommit {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
            }
    } else if (params.illumina) {
            process {
                container = 'oxfordmmm/nf-head-pod:latest'

                withName:articDownloadScheme {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:indexReference {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:readTrimming {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:readMapping {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:trimPrimerSequences {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:callVariants {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:makeConsensus {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:makeQCCSV {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:collateSamples {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:getObjFiles {
                    time = '30m'
                    container = 'oxfordmmm/oci_pipeline:latest'
                }
                withName:pango {
                    time = '5m'
                    container = 'oxfordmmm/pango:latest'
                }
                withName:nextclade {
                    time = '5m'
                    container = 'nextstrain/nextclade:1.4.0'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    container = 'nextstrain/nextclade:1.4.0'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    container = 'oxfordmmm/aln2type:latest'
                }
                withName:aln2type {
                    time = '5m'
                    container = 'oxfordmmm/aln2type:latest'
                }
                withName:viridian {
                    time = '45m'
                    container = 'oxfordmmm/viridian_workflow:latest'
                }
                withName:FN4_upload {
                    time = '1h'
                    container = 'oxfordmmm/fn4_upload:latest'
                }
                withName:makeReport {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:getGFF3 {
                    time = '1h'
                    container = 'oxfordmmm/bcftools:latest'
                }
                withName:bcftools_csq {
                    time = '1h'
                    container = 'oxfordmmm/bcftools:latest'
                }
                withName:getWorkflowCommit {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
            }
        }
    }
    oke {
        process {
            executor = 'k8s'
            scratch = true
            errorStrategy = { sleep(Math.pow(2, task.attempt) * 200 as long); return 'retry' }
            maxRetries = 5
        }
        k8s {
            namespace = 'ns1'
            storageClaimName = 'ns1-oke-fss-pvc-nextflow-workspace'
            serviceAccount = 'ns1-nextflow-sa'
            projectDir = '/workspace/project'
            pod = [ 
		[label: 'pod-type', value: 'nextflow-worker'],
		[env: 'NXF_DEBUG', value: '3']
	    ]
        }
        report {
            enabled = true
        }

        timeline {
            enabled = true
        }
        dag {
            enabled = true
        }
        trace {
            enabled = true
        }
        docker.enabled = true

        if ( params.medaka || params.nanopolish || params.analysis || (params.viridian && !params.illumina) ) {
            process {
                container = 'tomyip/nftest:latest'

                withName:articDownloadScheme {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:articGuppyPlex {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:articMinIONMedaka {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:articRemoveUnmappedReads {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:makeQCCSV {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
                withName:getObjFilesONT {
                    time = '30m'
                    container = 'oxfordmmm/oci_pipeline:latest'
                }
                withName:pango {
                    time = '5m'
                    container = 'oxfordmmm/pango:latest'
                }
                withName:nextclade {
                    time = '5m'
                    container = 'nextstrain/nextclade:1.4.0'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    container = 'nextstrain/nextclade:1.4.0'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    container = 'oxfordmmm/aln2type:latest'
                }
                withName:aln2type {
                    time = '5m'
                    container = 'oxfordmmm/aln2type:latest'
                }
                withName:articMinIONViridian {
                    time = '45m'
                    container = 'tomyip/viridian:latest'
                }
                withName:FN4_upload {
                    time = '1h'
                    container = 'oxfordmmm/fn4_upload:latest'
                }
                withName:makeReport {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:getGFF3 {
                    time = '1h'
                    container = 'oxfordmmm/bcftools:latest'
                }
                withName:bcftools_csq {
                    time = '1h'
                    container = 'oxfordmmm/bcftools:latest'
                }
                withName:getWorkflowCommit {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
            }
    } else if (params.illumina) {
            process {
                container = 'tomyip/nftest:latest'

                withName:articDownloadScheme {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:indexReference {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:readTrimming {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:readMapping {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:trimPrimerSequences {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:callVariants {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:makeConsensus {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:makeQCCSV {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:writeQCSummaryCSV {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:collateSamples {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:getObjFiles {
                    time = '30m'
                    container = 'oxfordmmm/oci_pipeline:latest'
                }
                withName:pango {
                    time = '5m'
                    container = 'oxfordmmm/pango:latest'
                }
                withName:nextclade {
                    time = '5m'
                    container = 'nextstrain/nextclade:1.4.0'
                }
                withName:download_nextclade_files {
                    time = '1h'
                    container = 'nextstrain/nextclade:1.4.0'
                }
                withName:getVariantDefinitions {
                    time = '1h'
                    container = 'oxfordmmm/aln2type:latest'
                }
                withName:aln2type {
                    time = '5m'
                    container = 'oxfordmmm/aln2type:latest'
                }
                withName:viridian {
                    time = '45m'
                    container = 'tomyip/viridian:latest'
                }
                withName:FN4_upload {
                    time = '1h'
                    container = 'oxfordmmm/fn4_upload:latest'
                }
                withName:makeReport {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-illumina:latest'
                }
                withName:getGFF3 {
                    time = '1h'
                    container = 'oxfordmmm/bcftools:latest'
                }
                withName:bcftools_csq {
                    time = '1h'
                    container = 'oxfordmmm/bcftools:latest'
                }
                withName:getWorkflowCommit {
                    time = '1h'
                    container = 'oxfordmmm/artic-ncov2019-nanopore:latest'
                }
            }
        }
    }
    slurm {
        process.executor = 'slurm'
    }
    lsf {
        process.executor = 'lsf'
    }
    gls {
        process.executor = 'google-lifesciences'
        includeConfig 'conf/gls.config'
    }
}

// COG-UK institutional config
includeConfig 'conf/coguk.config'

// Capture exit codes from upstream processes when piping
process.shell = ['/usr/bin/env bash', '-euo', 'pipefail']

manifest {
    author = 'Matt Bull'
    description = 'Nextflow for running the Artic ncov2019 pipeline'
    mainScript = 'main.nf'
    nextflowVersion = '>=20.01.0'
    version = 'sp3env-v0.1.5'
}
